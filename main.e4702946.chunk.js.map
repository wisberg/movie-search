{"version":3,"sources":["Components/GetMovieName.js","App.js","index.js"],"names":["GetMovieName","props","searchAPI","name","options","method","url","headers","axios","request","then","response","data","id","title","document","getElementsByClassName","innerHTML","castMembers","i","cast","length","actor","character","console","log","newHTML","poster","plot","year","rating","rating_votes","trailer","catch","error","onChange","e","setState","movieSearch","target","value","onSubmit","preventDefault","state","componentDidMount","clearForm","movieData","className","this","type","style","display","placeholder","onClick","Component","App","React","ReactDOM","render","getElementById"],"mappings":"kOA6HeA,EAzHf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWJC,UAAY,SAACC,GACX,IAAIC,EAAU,CACZC,OAAQ,MACRC,IAAI,uEAAD,OAAyEH,GAC5EI,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,2DAIzBC,IAAMC,QAAQL,GAASM,MAAK,SAAUC,GACpC,GAAwB,KAArBA,EAASC,KAAKC,IAAqC,KAAxBF,EAASC,KAAKE,MAC1CC,SAASC,uBAAuB,gBAAgB,GAAGC,UAAnD,yEAEE,CAEF,IADA,IAAIC,EAAc,GACVC,EAAI,EAAGA,EAAIR,EAASC,KAAKQ,KAAKC,OAAQF,IAAI,CAChD,IAAIG,EAAQX,EAASC,KAAKQ,KAAKD,GAAGG,MAC9BC,EAAYZ,EAASC,KAAKQ,KAAKD,GAAGI,UACtCL,GAAW,6BAA0BI,EAA1B,+BAAsDC,EAAtD,SAIbC,QAAQC,IAAId,EAASC,MACrB,IAAIc,EAAO,6GAIGf,EAASC,KAAKe,OAJjB,4IAO4BhB,EAASC,KAAKE,MAP1C,+DAQ2BH,EAASC,KAAKgB,KARzC,iEAS6BjB,EAASC,KAAKiB,KAT3C,2DAUuBlB,EAASC,KAAKS,OAVrC,gEAW4BV,EAASC,KAAKkB,OAX1C,iBAWyDnB,EAASC,KAAKmB,aAXvE,yIAcPb,EAdO,6IAkBoCP,EAASC,KAAKoB,QAAQnB,GAlB1D,kQAyBXE,SAASC,uBAAuB,gBAAgB,GAAGC,UAAYS,MAEhEO,OAAM,SAAUC,GACjBV,QAAQU,MAAMA,OAhED,EAwEjBC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAzEvB,EA6EfC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAKL,SAAS,CAACC,YAAaF,IAC5BZ,QAAQC,IAAI,EAAKkB,MAAML,aACvB,EAAKpC,UAAU,EAAKyC,MAAML,aAC1B,EAAKD,SAAS,CAACC,YAAa,MAlFf,EAqFfM,kBAAoB,WAClB7B,SAASC,uBAAuB,gBAAgB,GAAGC,UAAnD,6DAtFa,EAyFf4B,UAAY,WACV9B,SAASC,uBAAuB,gBAAgB,GAAGC,UAAnD,6DAvFJ,EAAK0B,MAAQ,CACTL,YAAY,GACZQ,UAAU,IALG,EADrB,qDA+FU,OACF,sBAAKC,UAAU,MAAf,UACE,yBAAQlC,GAAK,SAAb,UACA,oBAAIkC,UAAY,WAAhB,8BACA,qBAAKA,UAAY,aAAjB,SACA,uBAAMN,SAAYO,KAAKP,SAAUM,UAAY,YAA7C,UACS,uBACAE,KAAO,OACP9C,KAAO,SACP+C,MAAS,CAACC,QAAQ,QAClBC,YAAc,wBACdjB,SAAYa,KAAKb,SACjBK,MAASQ,KAAKL,MAAML,cAEpB,uBAAOW,KAAO,SAAST,MAAQ,SAASO,UAAY,QACpD,wBAAQE,KAAO,QAAQT,MAAQ,QAAQO,UAAY,MAAMM,QAAWL,KAAKH,UAAzE,2BAKT,qBAAKE,UAAY,wBAnH3B,GAAkCO,aCanBC,E,uKART,OACF,8BACE,cAAC,EAAD,U,GALYC,IAAMF,WCFxBG,IAASC,OACL,cAAC,EAAD,IAEF3C,SAAS4C,eAAe,W","file":"static/js/main.e4702946.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport class GetMovieName extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        movieSearch:'',\n        movieData:[]\n      }\n      \n    }\n  \n  \n      //send in title of the movie from input field to search for the movie data with the api \n      searchAPI = (name) => {\n        var options = {\n          method: 'GET',\n          url: `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/${name}`,\n          headers: {\n            'x-rapidapi-key': '44aa493582msh9c7cdbdd96d71b7p1494ebjsnca6c4dd2d960',\n            'x-rapidapi-host': 'imdb-internet-movie-database-unofficial.p.rapidapi.com'\n          }\n        };\n      \n      axios.request(options).then(function (response) {\n        if(response.data.id === '' || response.data.title === ''){\n          document.getElementsByClassName('movieDisplay')[0].innerHTML = `<div class = 'no-movie'>Movie not found. Please try again...</div>`;\n        }\n        else{\n          var castMembers = '';\n          for(let i = 0; i < response.data.cast.length; i++){\n            var actor = response.data.cast[i].actor;\n            var character = response.data.cast[i].character;\n            castMembers += `<li> <b>Actor</b>: ${actor}, <b>Character</b>: ${character}</li>`; \n            \n          }\n        \n          console.log(response.data);\n          var newHTML =\n          `\n          <div class = \"movieInfo\"> \n          <div class = moviePoster>\n          <img src = \"${response.data.poster}\" class = \"moviePoster\" alt-text=\"movie poster\" />\n          </div>\n          \n          <p class = \"movie-info\" id = \"title\">${response.data.title}</p>\n          <p class = \"movie-info\" id = \"plot\">${response.data.plot}</p>\n          <p class = \"movie-info\">Release year: ${response.data.year}</p>\n          <p class = \"movie-info\">Length: ${response.data.length}</p>\n          <p class = \"movie-info\">IMDB Rating: ${response.data.rating} with ${response.data.rating_votes} votes</p>\n          <div class = \"cast\"> Cast Members:\n          <ul class = \"movie-info\" id = \"castMembers\">\n            ${castMembers}\n          </ul>\n          </div>\n          <div class = movieTrailer>\n          <iframe src=\"https://www.imdb.com/video/imdb/${response.data.trailer.id}/imdb/embed?autoplay=false&width=480\" width=\"480\" height=\"270\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" frameborder=\"no\" scrolling=\"no\"></iframe>\n          </div>\n          </div>\n          \n          \n          `;\n\n          document.getElementsByClassName('movieDisplay')[0].innerHTML = newHTML;\n        }\n      }).catch(function (error) {\n        console.error(error);\n\n      });\n      \n      }\n      \n  \n\n    onChange = (e) => {\n      this.setState({ movieSearch: e.target.value });\n    }\n\n    \n      onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({movieSearch: e});\n        console.log(this.state.movieSearch);\n        this.searchAPI(this.state.movieSearch);\n        this.setState({movieSearch: ''});\n      }\n\n      componentDidMount = () => {\n        document.getElementsByClassName('movieDisplay')[0].innerHTML = `<div class = 'no-movie'>Search for a movie above...</div>`;\n      }\n\n      clearForm = () => {\n        document.getElementsByClassName('movieDisplay')[0].innerHTML = `<div class = 'no-movie'>Search for a movie above...</div>`;\n      }\n      \n        render() {\n          return (\n        <div className=\"App\">\n          <header id = 'header'>\n          <h1 className = \"duffsApp\">Duff's Movie App</h1>\n          <div className = \"search-box\">\n          <form onSubmit = {this.onSubmit} className = 'movieForm'>\n                   <input \n                   type = 'text' \n                   name = 'search' \n                   style = {{display:\"flex\"}}\n                   placeholder = 'Search for a movie...'\n                   onChange = {this.onChange}\n                   value = {this.state.movieSearch}\n                    />\n                   <input type = \"submit\" value = \"Submit\" className = \"btn\" />\n                   <button type = \"clear\" value = \"Clear\" className = \"btn\" onClick = {this.clearForm}>Clear</button>\n               </form>\n          </div>\n            \n          </header>\n          <div className = \"movieDisplay\"></div>\n               \n               \n        </div>\n    )}\n}\nexport default GetMovieName;","import React from 'react';\nimport './App.css';\nimport GetMovieName from './Components/GetMovieName';\n\n\n\nclass App extends React.Component{\n    \n    render() {\n      return (\n    <div>\n      <GetMovieName />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}